[build]
  command = "npm run build"
  publish = "dist"

[build.environment]
  NODE_VERSION = "18"

# Essential security headers (optimized for Firebase Auth)
[[headers]]
  for = "/*"
  [headers.values]
    X-Frame-Options = "DENY"
    X-Content-Type-Options = "nosniff"
    X-XSS-Protection = "1; mode=block"
    Referrer-Policy = "strict-origin-when-cross-origin"

# Firebase Auth specific headers (comprehensive CORS for all auth methods)
[[headers]]
  for = "/__/auth/*"
  [headers.values]
    X-Frame-Options = "ALLOWALL"
    Access-Control-Allow-Origin = "*"
    Access-Control-Allow-Methods = "GET, POST, PUT, DELETE, OPTIONS, PATCH"
    Access-Control-Allow-Headers = "Content-Type, Authorization, X-Requested-With, Accept, Origin, Cache-Control, X-File-Name, X-Client-Version, X-Firebase-*"
    Access-Control-Allow-Credentials = "true"
    Access-Control-Max-Age = "3600"

[[headers]]
  for = "/auth/*"
  [headers.values]
    Access-Control-Allow-Origin = "*"
    Access-Control-Allow-Methods = "GET, POST, PUT, DELETE, OPTIONS, PATCH"
    Access-Control-Allow-Headers = "Content-Type, Authorization, X-Requested-With, Accept, Origin, Cache-Control, X-File-Name, X-Client-Version, X-Firebase-*"
    Access-Control-Allow-Credentials = "true"
    Access-Control-Max-Age = "3600"
    X-Frame-Options = "ALLOWALL"

# Additional Firebase endpoints
[[headers]]
  for = "https://identitytoolkit.googleapis.com/*"
  [headers.values]
    Access-Control-Allow-Origin = "*"
    Access-Control-Allow-Methods = "GET, POST, PUT, DELETE, OPTIONS, PATCH"
    Access-Control-Allow-Headers = "Content-Type, Authorization, X-Requested-With, Accept, Origin, Cache-Control, X-Client-Version, X-Firebase-*"
    Access-Control-Allow-Credentials = "true"

[[headers]]
  for = "https://www.googleapis.com/identitytoolkit/*"
  [headers.values]
    Access-Control-Allow-Origin = "*"
    Access-Control-Allow-Methods = "GET, POST, PUT, DELETE, OPTIONS, PATCH"
    Access-Control-Allow-Headers = "Content-Type, Authorization, X-Requested-With, Accept, Origin, Cache-Control, X-Client-Version, X-Firebase-*"
    Access-Control-Allow-Credentials = "true"

# CRITICAL: Force correct MIME types for ALL JavaScript files (comprehensive patterns)
[[headers]]
  for = "*.js"
  [headers.values]
    Content-Type = "application/javascript; charset=utf-8"
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/assets/*.js"
  [headers.values]
    Content-Type = "application/javascript; charset=utf-8"
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "**/*.js"
  [headers.values]
    Content-Type = "application/javascript; charset=utf-8"
    Cache-Control = "public, max-age=31536000, immutable"

# Specific patterns for dynamically generated JS files
[[headers]]
  for = "/assets/*-*.js"
  [headers.values]
    Content-Type = "application/javascript; charset=utf-8"
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/assets/StaffManagement-*.js"
  [headers.values]
    Content-Type = "application/javascript; charset=utf-8"
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/assets/index-*.js"
  [headers.values]
    Content-Type = "application/javascript; charset=utf-8"
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/assets/vendor-*.js"
  [headers.values]
    Content-Type = "application/javascript; charset=utf-8"
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/assets/firebase-*.js"
  [headers.values]
    Content-Type = "application/javascript; charset=utf-8"
    Cache-Control = "public, max-age=31536000, immutable"

# CSS files
[[headers]]
  for = "*.css"
  [headers.values]
    Content-Type = "text/css; charset=utf-8"
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/assets/*.css"
  [headers.values]
    Content-Type = "text/css; charset=utf-8"
    Cache-Control = "public, max-age=31536000, immutable"

# API redirect rule (keep before SPA fallback)
[[redirects]]
  from = "/api/*"
  to = "/.netlify/functions/:splat"
  status = 200

# Redirect apex (plintcart.io) to www primary domain
[[redirects]]
  from = "/*"
  to = "https://www.plintcart.io/:splat"
  status = 301
  force = true
  conditions = { Host = ["plintcart.io"] }

# SPA fallback - must be last to serve index.html for client-side routing
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200

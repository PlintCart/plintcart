// Firestore Security Rules
// Add these rules to protect payment-related fields

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Existing rules for other collections...
    
    // Orders collection - enhanced with payment protection
    match /orders/{orderId} {
      allow read: if request.auth != null && 
        (resource.data.businessOwnerId == request.auth.uid || 
         resource.data.customerId == request.auth.uid);
      
      allow create: if request.auth != null && 
        request.auth.uid == resource.data.businessOwnerId &&
        // Only allow setting initial payment status to 'unpaid'
        (!('paymentStatus' in resource.data) || resource.data.paymentStatus == 'unpaid') &&
        // Prevent setting sensitive payment fields on creation
        !('paymentRef' in resource.data) &&
        !('settlementStatus' in resource.data) &&
        !('lastPaymentCheckAt' in resource.data);
      
      allow update: if request.auth != null && 
        (request.auth.uid == resource.data.businessOwnerId ||
         request.auth.uid == resource.data.customerId) &&
        // Prevent client updates to payment-sensitive fields
        !fieldChanged('paymentStatus') &&
        !fieldChanged('paymentRef') &&
        !fieldChanged('paymentProvider') &&
        !fieldChanged('paymentAmount') &&
        !fieldChanged('paymentCurrency') &&
        !fieldChanged('settlementStatus') &&
        !fieldChanged('lastPaymentCheckAt') &&
        !fieldChanged('subscriptionId') &&
        !fieldChanged('subscriptionStatus');
    }
    
    // Payment events collection - only Cloud Functions can write
    match /payment_events/{eventId} {
      allow read: if false; // No client reads
      allow write: if false; // Only Cloud Functions can write
    }
    
    // Settings collection - prevent payment config tampering
    match /settings/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId &&
        // Prevent direct manipulation of payment provider configs
        !fieldChanged('swyptSecretKey') &&
        !fieldChanged('swyptWebhookSecret');
    }
    
    // Helper function to check if a field changed
    function fieldChanged(field) {
      return field in request.resource.data && 
             request.resource.data[field] != resource.data.get(field, null);
    }
  }
}
